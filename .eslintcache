[{"/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/index.js":"1","/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/App.js":"2","/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/components/Details/Details.jsx":"3","/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/components/Details/styles.js":"4","/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/components/Main/Main.jsx":"5","/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/components/Main/styles.js":"6","/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/components/Main/Form/Form.jsx":"7","/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/components/Main/Form/styles.js":"8","/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/components/Main/List/List.jsx":"9","/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/components/Main/List/styles.js":"10","/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/context/context.js":"11","/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/context/contextReducer.js":"12","/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/constants/categories.js":"13","/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/utils/formatDate.js":"14","/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/useTransactions.js":"15"},{"size":375,"mtime":1610994198000,"results":"16","hashOfConfig":"17"},{"size":775,"mtime":1610994152000,"results":"18","hashOfConfig":"17"},{"size":658,"mtime":1610992963000,"results":"19","hashOfConfig":"17"},{"size":552,"mtime":1609874693000,"results":"20","hashOfConfig":"17"},{"size":1213,"mtime":1610994417000,"results":"21","hashOfConfig":"17"},{"size":489,"mtime":1610048872000,"results":"22","hashOfConfig":"17"},{"size":4965,"mtime":1610994234000,"results":"23","hashOfConfig":"17"},{"size":234,"mtime":1610398771000,"results":"24","hashOfConfig":"17"},{"size":1591,"mtime":1610580597000,"results":"25","hashOfConfig":"17"},{"size":398,"mtime":1610406205000,"results":"26","hashOfConfig":"17"},{"size":1233,"mtime":1610579301000,"results":"27","hashOfConfig":"17"},{"size":566,"mtime":1610580298000,"results":"28","hashOfConfig":"17"},{"size":1659,"mtime":1610652030000,"results":"29","hashOfConfig":"17"},{"size":368,"mtime":1610652411000,"results":"30","hashOfConfig":"17"},{"size":1189,"mtime":1610653057000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"7lama1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/index.js",[],["64","65"],"/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/App.js",[],"/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/components/Details/Details.jsx",[],"/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/components/Details/styles.js",[],"/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/components/Main/Main.jsx",[],"/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/components/Main/styles.js",[],"/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/components/Main/Form/Form.jsx",["66"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { ExpenseTrackerContext } from \"../../../context/context\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useSpeechContext } from \"@speechly/react-client\";\n// import CuztomizedSnackbar from \"../../Snackbar/CustomizedSnackbar\";\nimport {\n  TextField,\n  Typography,\n  Grid,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport useStyles from \"./styles\";import formatDate from \"../../../utils/formatDate\";\nimport { incomeCategories, expenseCategories,} from \"../../../constants/categories\";\n\nconst initialState = {\n  amount: \"\",\n  category: \"\",\n  type: \"Income\",\n  date: formatDate(new Date()),\n};\n\nconst Form = () => {\n  const classes = useStyles();\n  const [formData, setFormData] = useState(initialState);\n  const { addTransaction } = useContext(ExpenseTrackerContext);\n  const { segment } = useSpeechContext();\n//   const [open, setOpen] = useState(false);\n\n  const createTransaction = () => {\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\"))\n      return;\n    const transaction = {\n      ...formData,\n      amount: Number(formData.amount),\n      id: uuidv4(),\n    };\n    // setOpen(true);\n    addTransaction(transaction);\n    setFormData(initialState);\n  };\n\n  useEffect(() => {\n    if (segment) {\n      if (segment.intent.intent === \"add_expense\") {\n        setFormData({ ...formData, type: \"Expense\" });\n      } else if (segment.intent.intent === \"add_income\") {\n        setFormData({ ...formData, type: \"Income\" });\n      } else if (\n        segment.isFinal &&\n        segment.intent.intent === \"create_transaction\"\n      ) {\n        return createTransaction();\n      } else if (\n        segment.isFinal &&\n        segment.intent.intent === \"cancel_transaction\"\n      ) {\n        return setFormData(initialState);\n      }\n\n      segment.entities.forEach((s) => {\n        const category = `${s.value.charAt(0)}${s.value\n          .slice(1)\n          .toLowerCase()}`;\n\n        switch (s.type) {\n          case \"amount\":\n            setFormData({ ...formData, amount: s.value });\n            break;\n          case \"category\":\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\n              setFormData({ ...formData, type: \"Income\", category });\n            } else if (\n              expenseCategories.map((iC) => iC.type).includes(category)\n            ) {\n              setFormData({ ...formData, type: \"Expense\", category });\n            }\n            break;\n          case \"date\":\n            setFormData({ ...formData, date: s.value });\n            break;\n          default:\n            break;\n        }\n      });\n\n      if (\n        segment.isFinal &&\n        formData.amount &&\n        formData.category &&\n        formData.type &&\n        formData.date\n      ) {\n        createTransaction();\n      }\n    }\n},);\n//   }, [segment]);\n\n  const selectedCategories =\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\n\n  return (\n    <Grid container spacing={2}>\n      {/* <CuztomizedSnackbar open={open} setOpen={setOpen} /> */}\n      <Grid item xs={12}>\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\n          {segment && segment.words.map((w) => w.value).join(\" \")}\n        </Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Type</InputLabel>\n          <Select\n            value={formData.type}\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\n          >\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Category</InputLabel>\n          <Select\n            value={formData.category}\n            onChange={(e) =>\n              setFormData({ ...formData, category: e.target.value })\n            }\n          >\n            {selectedCategories.map((c) => (\n              <MenuItem key={c.type} value={c.type}>\n                {c.type}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          type=\"number\"\n          label=\"Amount\"\n          fullWidth\n          value={formData.amount}\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          type=\"date\"\n          label=\" \"\n          fullWidth\n          value={formData.date}\n          onChange={(e) => setFormData({ ...formData, date: e.target.value })}\n        />\n      </Grid>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n        onClick={createTransaction}\n      >\n        Create\n      </Button>\n    </Grid>\n  );\n};\n\nexport default Form;\n","/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/components/Main/Form/styles.js",[],"/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/components/Main/List/List.jsx",[],"/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/components/Main/List/styles.js",[],"/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/context/context.js",[],"/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/context/contextReducer.js",[],"/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/constants/categories.js",[],"/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/utils/formatDate.js",[],"/Users/user/Desktop/PostCodeboxxProjects/expense_tracker/src/useTransactions.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":46,"column":3,"nodeType":"73","endLine":46,"endColumn":12,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setFormData'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [segment, formData, createTransaction] as a second argument to the useEffect Hook.","Identifier",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Add dependencies array: [segment, formData, createTransaction]",{"range":"80","text":"81"},[2886,2886],", [segment, formData, createTransaction]"]